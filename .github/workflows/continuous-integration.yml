name: Rust CI with Docker Compose

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.8.0
  SQLX_FEATURES: "rustls,postgres"
  APP_USER: app
  APP_USER_PWD: secret
  APP_DB_NAME: newsletter
  SUPERUSER: postgres
  SUPERUSER_PWD: password
  DB_PORT: 5432

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (optional)
        uses: docker/setup-buildx-action@v2

      - name: Build and run migrations with Docker Compose
        run: docker compose up --build --exit-code-from migrate

      - name: Run tests with Docker Compose
        run: docker compose up --build --exit-code-from test

      - name: Tear down Docker Compose
        if: always()
        run: docker compose down -v

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain with rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain with clippy
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Linting
        run: cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (optional)
        uses: docker/setup-buildx-action@v2

      - name: Build and run migrations with Docker Compose
        run: docker compose up --build --exit-code-from migrate

      - name: Run tests with coverage inside Docker Compose
        run: docker compose run --rm test cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Generate coverage report
        run: docker compose run --rm test cargo llvm-cov report --html --output-dir coverage

      - uses: actions/upload-artifact@v4
        with:
          name: Coverage report
          path: coverage/

      - name: Tear down Docker Compose
        if: always()
        run: docker compose down -v
